import React, { RefObject, useEffect, useMemo } from 'react'
import { Flex, Grid } from '../../../../components/atoms/Layout'
import { SectionTitle } from '../../../../components/atoms/Typography'
import { AboutThesis } from '../molecules/AboutThesis'
import { Text } from '../../../../components/atoms/Typography'
import { useWindowDimensions } from '../../../../hooks/internal/useWindowDimensions'

// export const ExploitsCoverageSection = <ExploitsCoverageSectionFunction />
export function ExploitsCoverageSection({
  sectionRef: ref,
  getScrollerForThisRef,
  isVisible,
}: {
  sectionRef?: React.Ref<HTMLDivElement>
  getScrollerForThisRef?: (ref: ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement>) => () => void
  isVisible?: boolean
}): JSX.Element {
  const { isMobile } = useWindowDimensions()
  const scroller = useMemo(
    () => (ref && getScrollerForThisRef ? getScrollerForThisRef(ref) : () => console.log('no ref')),
    [ref, getScrollerForThisRef]
  )
  useEffect(() => {
    if (isVisible) {
      // console.log('currently visible: ', 'ExploitsCoverageSection')
      // console.log('ExploitsCoverageSection > useEffect > isVisible > now trying to scroll here')
      // console.log('my ref: ', ref)
      scroller()
    }
  }, [isVisible, scroller, ref])

  return (
    <Flex col stretch pr={isMobile ? 40 : 150} pl={isMobile ? 40 : 150} justifyCenter ref={ref}>
      <SectionTitle light isMobile={isMobile}>
        Exploits{' '}
        <SectionTitle inline extrabold isMobile={isMobile}>
          Coverage
        </SectionTitle>
      </SectionTitle>
      <Flex col gap={70} mt={70}>
        <Grid gap={isMobile ? 50 : 60} columns={isMobile ? 1 : 2}>
          <AboutThesis
            title="Simple"
            text={
              <>
                Set a coverage limit and get a{' '}
                <Text extrabold inline light>
                  single policy for your entire portfolio.
                </Text>
              </>
            }
          />
          <AboutThesis
            title="Dynamic"
            text={
              <>
                System monitors changes in your portfolio positions and{' '}
                <Text inline extrabold light>
                  adjusts the rate for coverage accordingly.
                </Text>
              </>
            }
          />
          <AboutThesis
            title="Fast and hassle-free"
            text={
              <>
                Parametric claims assessment system does not require filing a claim and allows you to{' '}
                <Text extrabold inline>
                  receive a payout within one week.
                </Text>
              </>
            }
          />
          <AboutThesis
            title="Transparent"
            text={
              <>
                Solace is the only crypto protection protocol to publish its{' '}
                <Text extrabold inline>
                  pricing, risk data and risk models to GitHub
                </Text>{' '}
                and decentralized storage using IPFS.
              </>
            }
          />
        </Grid>
      </Flex>
    </Flex>
  )
}
